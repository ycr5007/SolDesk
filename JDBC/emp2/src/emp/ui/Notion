	
	_ : 테이블명
	* : 실행 메소드 Name
	
	_UI : 실제 사용자가 볼 수 있는 화면 / 페이지
	_Controller : UI 로부터 사용자가 요청한 Action 을 찾아 실행시켜줌
	
	* Action : 각 요청을 실질적으로 처리 ( Interface )
	* Service : 실질적인 비즈니스 로직을 처리 ( DB 작업 담당 - CRUD )
			>> Business Logic : 사용자가 요청하는 작업을 처리
		>> DB 연결 및 DAO 호출하여 메소드 실행 ( getConnection 메소드 실행 )
	
	_DAO : (Data Access Object) 로 데이터베이스에게 SQL 문을 넘겨주거나, 데이터베이스에서 작업을 실행하는 클래스
	_DTO : (Data Transfer Object) 로 객체간 데이터를 주고받기 위해 만들어진 Class ( 테이블의 Column 을 멤버변수로 갖는다 )
	JdbcUtil : getConnection / 객체 close / 트랜잭션 ... DB 관리 ( Service 에서 호출)
	ConsoleUtil : 화면 / 콘솔 출력 담당 ( Action 에서 호출 )
	
	
	MVC 2 Pattern 동작 순서
		1_UI . User 가 선택한 메뉴를 action 객체에 생성
		2_UI . User 선택한 Menu 값이 있다면, Controller 로 요청한 Action 전달
		3_Controller . UI 로부터 호출되어, UI 에서 넘어온 Action 을 실행시키는 execute() 호출
		4_Action . Service 객체 생성 및 호출하여 해당 Service 실행
						변경 값, service 에게 넘겨줌
		5_Service . 실제 DB 에 접근 및 DAO 객체에서 CRUD 작업 실행 (성공 여부:boolean / 조회한 개체 반환)
						성공 시, Commit / 실패 시, Rollback (개발자가 트랜잭션 관리)
						DB 작업이 끝나면 Connection 종료
		6_Action . Service 에서 비즈니스 로직 실행 결과를 반환받아 최종 결과문을 출력
			