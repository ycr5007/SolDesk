<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.study.mapper.BoardMapper">

	<!-- 댓글 수 수정 -->
	<update id="updateReplyCnt">
		update spring_board set replycnt = replycnt + #{amount} where bno = #{bno}
	</update>
	
	<!-- 페이징 처리 X -->
	<!-- <select id="getList" resultType="com.study.dto.BoardDTO">
		select bno, title, writer, regdate, updatedate from spring_board where bno > 0 order by bno desc
	</select> -->


	<!-- 동적 SQL -->
	<!-- 
		prefix : 호출 시 시작 문자열
		suffix : 호출 후 끝 문자열
		prefixOverrides : OR 로 시작할 경우, prefix 를 생략
		collection : 배열
		item : 객체
	 -->
	<sql id="criteria">
		<trim prefix="(" suffix=") AND" prefixOverrides="OR">
			<foreach collection="typeArr" item="type">
				<trim prefix="OR">
					<choose>
						<when test="type=='T'.toString()">
							title like '%' || #{keyword} || '%'
						</when>
						<when test="type=='C'.toString()">
							content like '%' || #{keyword} || '%'
						</when>
						<when test="type=='W'.toString()">
							writer like '%' || #{keyword} || '%'
						</when>
					</choose>
				</trim>
			</foreach>
		</trim>
	</sql>

	<!-- Request processing failed; nested exception is org.springframework.jdbc.BadSqlGrammarException: >> sql 문 끝 ' ; ' 제거할 것 -->
	<select id="getList" resultType="com.study.dto.BoardDTO">
		<!-- <!CDATA[ sql ]]> : 내부에 있는 문장은 <태그> 가 아님을 명시-->
		<!-- select * from (select rownum as rnum, A.* from (select bno, title, writer, regdate, updatedate from SPRING_BOARD where bno > 0 order by bno desc) A where rownum <= (#{pageNum} * #{amount})) where rnum > (#{pageNum} - 1) * #{amount}; -->
		select * from
				(select /*+INDEX_DESC(spring_board pk_spring_board)*/ rownum as rnum, bno, title, writer, regdate, updatedate, replycnt from spring_board where 
		<!-- <if test="type == 'T'.toString()">
			and title like '%' || #{keyword} || '%'
		</if>
		<if test="type == 'C'.toString()">
			and content like '%' || #{keyword} || '%'
		</if>
		<if test="type == 'W'.toString()">
			and writer like '%' || #{keyword} || '%'
		</if>
		<if test="type == 'TC'.toString()">
			and title like '%' || #{keyword} || '%' or content like '%' || #{keyword} || '%'
		</if>
		<if test="type == 'TW'.toString()">
			and title like '%' || #{keyword} || '%' or writer like '%' || #{keyword} || '%'
		</if>
		<if test="type == 'TCW'.toString()">
			and title like '%' || #{keyword} || '%' or content like '%' || #{keyword} || '%' or writer like '%' || #{keyword} || '%'
		</if> -->
			 <!-- 동적 SQL 적용 -->
			 	<include refid="criteria"></include> 

			 bno > 0 and rownum <![CDATA[ <= ]]> (#{pageNum} * #{amount}))
			where rnum > (#{pageNum} - 1) * #{amount}
	</select>
	
	<select id="totalCnt" resultType="int">
		<!-- 동적 SQL 적용 -->
		select count(*) from spring_board where <include refid="criteria"></include> bno > 0
	</select>
	
	
	<insert id="register">
		<!-- 
			selectKey : 주로 PK 값을 미리 실행한 후, 특정 이름으로 보관
				keyProperty : 결과 값이 세팅될 대상 Property ( 변수명 )
				order = [BEFORE | AFTER] : 실행 순서
				resultType : 반환되는 Property 의 타입
		 -->
		<!-- bno 발행 -->
		<selectKey keyProperty="bno" order="BEFORE" resultType="int">
			select seq_board.nextval from dual
		</selectKey>
		insert into spring_board(bno, title, content, writer) values (#{bno}, #{title}, #{content}, #{writer})
	</insert>
	<select id="getOne" resultType="com.study.dto.BoardDTO">
		select bno, title, content, writer from spring_board where bno = #{bno}
	</select>
	<update id="modify">
		update spring_board set title = #{title}, content = #{content}, updatedate = sysdate where bno = #{bno}
	</update>
	<delete id="remove">
		delete from spring_board where bno = #{bno}
	</delete>	

</mapper>